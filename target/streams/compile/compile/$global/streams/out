[0m[[0m[33mwarn[0m] [0m[0m/Users/shonanking/lab/GPEG/src/main/scala/main.scala:29:54: match may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0mIt would fail on the following input: Nil[0m
[0m[[0m[33mwarn[0m] [0m[0m        lazy val Sequence: Parser[Exp] = Prefix.+ ^^ { case x::xs => [0m
[0m[[0m[33mwarn[0m] [0m[0m                                                     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/shonanking/lab/GPEG/src/main/scala/main.scala:53:18: match may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0mIt would fail on the following input: ~(_, Nil)[0m
[0m[[0m[33mwarn[0m] [0m[0m            ) ^^ {[0m
[0m[[0m[33mwarn[0m] [0m[0m                 ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/shonanking/lab/GPEG/src/main/scala/main.scala:56:107: match may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0mIt would fail on the following input: ~(_, Nil)[0m
[0m[[0m[33mwarn[0m] [0m[0m        lazy val CLASS: Parser[Exp] = (loc <~ chr('[')) ~ (not(chr(']')) ~> Range).* <~ ']' ~> Spacing ^^ {[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                                                                          ^[0m
[0m[[0m[33mwarn[0m] [0m[0mthree warnings found[0m
