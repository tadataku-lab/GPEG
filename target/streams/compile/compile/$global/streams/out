[0m[[0m[33mwarn[0m] [0m[0m/Users/shonanking/lab/GPEG/src/main/scala/ParserContext.scala:4:22: Unused import[0m
[0m[[0m[33mwarn[0m] [0m[0mimport ParserContext._[0m
[0m[[0m[33mwarn[0m] [0m[0m                     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/shonanking/lab/GPEG/src/main/scala/Tree.scala:1:22: Unused import[0m
[0m[[0m[33mwarn[0m] [0m[0mimport ParserContext._[0m
[0m[[0m[33mwarn[0m] [0m[0m                     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/shonanking/lab/GPEG/src/main/scala/main.scala:28:13: local var b in method main is never set: consider using immutable val[0m
[0m[[0m[33mwarn[0m] [0m[0m        var b = "a"[0m
[0m[[0m[33mwarn[0m] [0m[0m            ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/shonanking/lab/GPEG/src/main/scala/GpegParser.scala:59:107: match may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0mIt would fail on the following input: ~(_, Nil)[0m
[0m[[0m[33mwarn[0m] [0m[0m        lazy val CLASS: Parser[Exp] = (loc <~ chr('[')) ~ (not(chr(']')) ~> Range).* <~ ']' ~> Spacing ^^ {[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                                                                          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/shonanking/lab/GPEG/src/main/scala/PackratParser.scala:22:15: match may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0mIt would fail on the following inputs: PAnd(_, _), PAny(_), PCall(_, _), PFold(_, _, _, _), PIf(_, _, _), PMany(_, _), PNot(_, _), PUnion(_, _)[0m
[0m[[0m[33mwarn[0m] [0m[0m            p.exp match {[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m5 warnings found[0m
