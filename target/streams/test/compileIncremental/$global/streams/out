[0m[[0m[0mdebug[0m] [0m[0mThe GpegParser$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(parse,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) GpegParser$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) GpegParser$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of TestParse: Set(UsedName(parse,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe Ast$Grammar has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(start,[Default]), UsedName($isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Grammar,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(==,[Default]), UsedName(rules,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(wait,[Default]), UsedName(Ast;Grammar;init;,[Default]), UsedName(toString,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(notify,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Ast$Grammar: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Ast$Grammar.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of TestParse: Set(UsedName(Grammar,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe Ast$ has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(Alt,[Default]), UsedName(AnyChar,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Not,[Default]), UsedName(Exp,[Default]), UsedName(LinkTree,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Grammar,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(And,[Default]), UsedName(Many,[Default]), UsedName(==,[Default]), UsedName(Ast,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(wait,[Default]), UsedName(Seq,[Default]), UsedName(toString,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(NonTerm,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(FoldMany,[Default]), UsedName(Choice,[Default]), UsedName(Caputure,[Default]), UsedName(Empty,[Default]), UsedName(Any,[Default]), UsedName(eq,[Default]), UsedName(notify,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) Ast$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) Ast$.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of TestParse: Set(UsedName(Grammar,[Default]), UsedName(==,[Default]), UsedName(Ast,[Default]), UsedName(toString,[Default]), UsedName(Any,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/Users/shonanking/lab/GPEG/target/scala-2.12/test-classes/TestParse.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(GpegParser$,ModifiedNames(changes = UsedName(parse,[Default]))), NamesChange(Ast$Grammar,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(start,[Default]), UsedName($isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(unapply,[Default]), UsedName(tupled,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Grammar,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(curried,[Default]), UsedName(==,[Default]), UsedName(rules,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(clone,[Default]), UsedName(wait,[Default]), UsedName(Ast;Grammar;init;,[Default]), UsedName(toString,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(notify,[Default]), UsedName(productIterator,[Default]))), NamesChange(Ast$,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(Alt,[Default]), UsedName(AnyChar,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Not,[Default]), UsedName(Exp,[Default]), UsedName(LinkTree,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Grammar,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(And,[Default]), UsedName(Many,[Default]), UsedName(==,[Default]), UsedName(Ast,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(wait,[Default]), UsedName(Seq,[Default]), UsedName(toString,[Default]), UsedName(synchronized,[Default]), UsedName($asInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(NonTerm,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(FoldMany,[Default]), UsedName(Choice,[Default]), UsedName(Caputure,[Default]), UsedName(Empty,[Default]), UsedName(Any,[Default]), UsedName(eq,[Default]), UsedName(notify,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/Users/shonanking/lab/GPEG/src/test/scala/test.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(TestParse)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll sources are invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 1 sources: invalidated sources (1) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to /Users/shonanking/lab/GPEG/target/scala-2.12/test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.5:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.5:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 24bc57e4 for Scala compiler version 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xlint[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/classes:/Users/shonanking/.sbt/boot/scala-2.12.4/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/shonanking/lab/GPEG/target/scala-2.12/test-classes:/Users/shonanking/lab/GPEG/target/scala-2.12/classes:/Users/shonanking/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.4.jar:/Users/shonanking/.sbt/boot/scala-2.12.4/lib/scala-reflect.jar:/Users/shonanking/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.6.jar:/Users/shonanking/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.4.jar:/Users/shonanking/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.0.5.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 0.756978322 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
